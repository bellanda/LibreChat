
export default function GlossarioPage() {
  const models = [
    {
      company: "Google",
      models: [
        {
          name: "Gemini 2.5 Flash",
          description: "Modelo otimizado para velocidade, ideal para tarefas r√°pidas e respostas curtas com boa coer√™ncia.",
          tip: "Use em chatbots ou resumos r√°pidos."
        },
        {
          name: "Gemini 2.5 Flash Lite",
          description: "Vers√£o mais leve do Flash, ainda mais r√°pida, com custo menor.",
          tip: "Bom para aplica√ß√µes em larga escala e perguntas simples."
        },
        {
          name: "Gemini 2.5 Pro",
          description: "Foca na qualidade de respostas, √≥timo para textos longos ou an√°lises.",
          tip: "Ideal para reda√ß√µes, e-mails e conte√∫dos mais elaborados."
        }
      ]
    },
    {
      company: "OpenAI",
      models: [
        {
          name: "GPT-o3",
          description: "Modelo b√°sico, r√°pido e eficiente.",
          tip: "Use para tarefas cotidianas, como resumos, tradu√ß√µes e respostas simples."
        },
        {
          name: "GPT-o4-mini",
          description: "Compacto, com desempenho surpreendente.",
          tip: "Equilibra bem custo e qualidade. √ìtimo para projetos cont√≠nuos."
        },
        {
          name: "GPT-4.1",
          description: "Modelo avan√ßado com excelente compreens√£o de contexto e gera√ß√£o de texto.",
          tip: "Perfeito para uso jur√≠dico, t√©cnico ou criativo de alto n√≠vel."
        },
        {
          name: "GPT-4.1-mini",
          description: "Vers√£o compacta do 4.1, com √≥timo desempenho e custo reduzido.",
          tip: "Use quando quiser qualidade pr√≥xima do 4.1, mas mais barato."
        },
        {
          name: "GPT-4.1-nano",
          description: "Modelo ultra leve, para tarefas r√°pidas e de baixa complexidade.",
          tip: "Ideal para assistentes embarcados e dispositivos com pouca mem√≥ria."
        }
      ]
    },
    {
      company: "Anthropic",
      models: [
        {
          name: "Claude Sonnet 4",
          description: "Modelo de linguagem com √≥timo racioc√≠nio e √©tica.",
          tip: "Indicado para uso institucional, educacional e com foco em seguran√ßa."
        }
      ]
    },
    {
      company: "Groq",
      models: [
        {
          name: "Llama 4 Maverick",
          description: "Foco em velocidade extrema, √≥timo para tempo real.",
          tip: "Use em interfaces onde a resposta instant√¢nea √© prioridade."
        },
        {
          name: "Llama 4 Scout",
          description: "Variante r√°pida e robusta para tarefas variadas.",
          tip: "Boa escolha para fluxos mistos com leitura, an√°lise e gera√ß√£o de texto."
        },
        {
          name: "Kimi K2",
          description: "Modelo vers√°til da Groq, com boa fluidez e entendimento.",
          tip: "√ötil para di√°logos mais naturais e intera√ß√µes complexas."
        }
      ]
    }
  ];
  

  
  return (
        <div className="space-y-6">
          <div className="bg-[#1c1c1c] p-6 rounded-lg shadow-sm border border-gray-700">
            <h3 className="text-xl font-semibold text-white mb-4">Termos T√©cnicos Essenciais</h3>
            
            <div className="space-y-6">
              <div className="border-l-4 border-blue-500 pl-4">
                <h4 className="font-semibold text-white mb-2">ü§ñ O que √© um prompt?</h4>
                <p className="text-gray-300">
                Um prompt √© a pergunta, comando ou instru√ß√£o que voc√™ envia para a intelig√™ncia artificial. Quanto mais claro e espec√≠fico for o seu prompt, melhor ser√° a resposta da IA.
                </p>
                <div className="mt-2 p-3 bg-gray-800 rounded text-sm">
                  <strong>Exemplo:</strong> "Escreva um resumo de 3 par√°grafos sobre intelig√™ncia artificial"
                </div>
              </div>
    
              <div className="border-l-4 border-green-500 pl-4">
                <h4 className="font-semibold text-white mb-2">üî§ O que √© um token?</h4>
                <p className="text-gray-300">
                  A IA processa texto em peda√ßos chamados tokens. Um token pode ser uma palavra, parte de uma palavra ou um caractere de pontua√ß√£o.
                </p>
                <div className="mt-2 p-3 bg-gray-800 rounded text-sm">
                  <strong>Exemplo:</strong> "Ol√°, mundo!" = 3 tokens (Ol√°, v√≠rgula, mundo!)
                </div>
              </div>
    
              <div className="border-l-4 border-purple-500 pl-4">
                <h4 className="font-semibold text-white mb-2">üìè Limite de Uso</h4>
                <p className="text-gray-300">
                  A quantidade m√°xima de tokens que pode ser usada em uma √∫nica requisi√ß√£o (prompt + resposta). Controla custos e evita respostas excessivamente longas.
                </p>
                <div className="mt-2 p-3 bg-gray-800 rounded text-sm">
                  <strong>Padr√£o:</strong> 8.000 tokens por requisi√ß√£o
                </div>
              </div>
    
              <div className="border-l-4 border-orange-500 pl-4">
                <h4 className="font-semibold text-white mb-2">‚öôÔ∏è Modelo</h4>
                <p className="text-gray-300">
                  O "c√©rebro" da IA que processa suas solicita√ß√µes. Diferentes modelos t√™m diferentes capacidades, velocidades e custos.
                </p>
                <div className="p-3 bg-gray-800 rounded text-sm">
                  <div className="p-2 bg-gray-800 rounded ">
                    {models[0].models.map((model) => (
                      <p key={model.name}><strong>{model.name}:</strong>  {model.description}  <br /> </p>
                    ))}
                  </div>
                      
                  <div className="bg-gray-800 p-1 rounded-lg">
                    {models[1].models.map((model) => (
                        <p key={model.name}><strong>{model.name}:</strong>  {model.description}  <br /> </p>
                      ))}
                  </div>
                    
                  <div className="bg-gray-800 p-1 rounded-lg">
                    {models[2].models.map((model) => (
                        <p key={model.name}><strong>{model.name}:</strong>  {model.description}  <br /> </p>
                      ))}
                  </div>
                    
                </div>

              </div>

              </div>
            </div>
          </div>
      );
}