// src/pages/PrecoTokenizacaoLimitacoesPage.jsx
import { useModelDescriptions } from '../../../../hooks/useModelDescriptions';
import SectionRecommendations from '../../components/SectionRecommendations';

const CostExample = () => (
  <div className="p-6 bg-gray-800">
    <h3 className="mb-2 text-xl font-semibold text-white">Exemplo de C√°lculo de Custo</h3>
    <ul className="mt-2 space-y-1 list-disc list-inside text-gray-200">
      <li>
        <span className="font-semibold">Prompt:</span> 5.000 tokens
      </li>
      <li>
        <span className="font-semibold">Resposta:</span> 10.000 tokens
      </li>
      <li>
        <span className="font-semibold">Modelo:</span> GPT-5
      </li>
      <li>
        <span className="font-semibold">C√°lculo Entrada:</span> 5.000 / 1.000.000 √ó $1,25 ={' '}
        <span className="font-semibold">$0,00625</span>
      </li>
      <li>
        <span className="font-semibold">C√°lculo Sa√≠da:</span> 10.000 / 1.000.000 √ó $10,00 ={' '}
        <span className="font-semibold">$0,1</span>
      </li>
      <li>
        <span className="font-semibold">Total:</span>{' '}
        <span className="font-bold text-green-300">$0,1</span> (15.000 tokens) - Cota√ß√£o R$5.50 =
        R$0,55
      </li>
    </ul>
  </div>
);

const PriceTable = () => {
  const { descriptions, loading } = useModelDescriptions();

  if (loading) {
    return (
      <div className="overflow-x-auto rounded-lg shadow-lg">
        <div className="p-8 min-w-full text-center bg-gray-800">
          <p className="text-gray-300">Carregando descri√ß√µes dos modelos‚Ä¶</p>
        </div>
      </div>
    );
  }

  return (
    <div className="overflow-x-auto rounded-lg shadow-lg">
      <table className="min-w-full bg-gray-800">
        <thead>
          <tr className="border-b border-gray-700">
            <th className="px-4 py-2 text-left text-white">Modelo</th>
            <th className="px-4 py-2 text-left text-white">Descri√ß√£o</th>
            <th className="px-4 py-2 text-left text-white">Pre√ßo Entrada</th>
            <th className="px-4 py-2 text-left white">Pre√ßo Sa√≠da</th>
          </tr>
        </thead>
        <tbody>
          {Object.keys(descriptions).map((model) => {
            const info = descriptions[model];
            if (info.shortUseCase) {
              return (
                <tr key={model} className="transition-colors hover:bg-gray-700">
                  <td className="flex items-center px-4 py-2 mr-2 font-semibold text-green-300">
                    <img src={info.image} className="mr-2 h-[70px] w-[100px]" />
                    <span>
                      {info.name}
                      <br></br>
                      <span className="text-sm text-gray-400">
                        Criador: {info.creator}
                        <br></br>
                        Provedor: {info.provider}
                      </span>
                    </span>
                  </td>
                  <td className="px-4 py-2 text-gray-300">{info.shortUseCase}</td>
                  <td className="px-4 py-2 text-gray-200">${info.prompt?.toFixed(2) ?? 'N/A'}</td>
                  <td className="px-4 py-2 text-gray-200">
                    ${info.completion?.toFixed(2) ?? 'N/A'}
                  </td>
                </tr>
              );
            }
            return null;
          })}
        </tbody>
      </table>
    </div>
  );
};

/* -------------------------------------------------------------------------
   LISTAS DE ITENS (exemplos) ‚Äì permanecem iguais ao que estava antes
   ------------------------------------------------------------------------- */
const models_task_day_to_day_items = [
  'Escrever e-mails formais',
  'Resumir textos longos',
  'Fazer pesquisas de senso-comum',
  'Tirar d√∫vidas de curiosidade',
  'Gerar rascunhos de posts',
  'Reformular frases',
  'Traduzir trechos r√°pidos',
];
const models_web_search_items = [
  'Checar not√≠cias de √∫ltima hora',
  'Comparar pre√ßos de produtos',
  'Coletar estat√≠sticas atualizadas',
  'Confirmar fatos hist√≥ricos ou cient√≠ficos',
  'Encontrar refer√™ncias acad√™micas',
  'Descobrir tend√™ncias de mercado',
];
const models_code_and_software_engineering_items = [
  'Gerar & rodar scripts Python',
  'Depurar c√≥digo JavaScript',
  'Converter APIs REST ‚Üí GraphQL',
  'Criar planilhas din√¢micas',
  'Automatizar relat√≥rios',
  'Plotar gr√°ficos',
  'Analisar CSVs',
  'Produzir testes unit√°rios',
  'Refatorar mon√≥litos',
];
const models_maximum_complexity_items = [
  'Racioc√≠nio multietapa',
  'An√°lises estrat√©gicas',
  'Pesquisa cient√≠fica avan√ßada',
  'Design de algoritmos',
  'Simula√ß√µes de cen√°rios',
  'Provas matem√°ticas',
  'Elabora√ß√£o de pol√≠ticas p√∫blicas',
  'Arquitetura de sistemas',
];
const models_ultra_velocity_items = [
  'Respostas instant√¢neas',
  'Chat-bots em tempo real',
  'Autocompletar',
  'Gera√ß√£o de texto curto',
  'Brainstorming r√°pido',
  'Sem execu√ß√£o de c√≥digo nem busca na web',
];

/* -------------------------------------------------------------------------
   RECOMENDA√á√ïES DE MODELOS POR TIPO DE TAREFA
   ------------------------------------------------------------------------- */

/* 1Ô∏è‚É£ Tarefas Comuns do Dia a Dia üì® */
const models_task_day_to_day = [
  {
    emoji: 'üü¢',
    name: 'Groq ‚Üí GPT-OSS 20B',
    cost: '0.10 / 0.50',
    speed: '‚ö°‚ö°‚ö°‚ö°‚ö°',
    capacity: '45',
  },
  {
    emoji: 'üü¢',
    name: 'Groq ‚Üí GPT-OSS 120B',
    cost: '0.15 / 0.75',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '58',
  },
  {
    emoji: 'üü¢',
    name: 'Google ‚Üí Gemini 2.5 Flash',
    cost: '0.3  / 2.5',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '51',
  },
  {
    emoji: 'üü¢',
    name: 'Groq ‚Üí Llama 4 Maverick',
    cost: '0.2  / 0.6',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '36',
  },
];

/* 2Ô∏è‚É£ Pesquisa na Web üîç */
const models_web_search = [
  {
    emoji: 'üü°',
    name: 'Google ‚Üí Gemini 2.5 Flash',
    cost: '0.3  / 2.5',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '51',
  },
  {
    emoji: 'üü°',
    name: 'Azure OpenAI ‚Üí GPT‚Äë5',
    cost: '1.25  / 10.0',
    speed: '‚ö°‚ö°‚ö°',
    capacity: '62',
  },
  {
    emoji: 'üü¢',
    name: 'Groq ‚Üí GPT-OSS 120B',
    cost: '0.15 / 0.75',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '58',
  },
];

/* 3Ô∏è‚É£ C√≥digo & Eng. Software üíª */
const models_code_and_software_engineering = [
  {
    emoji: 'üîµ',
    name: 'Anthropic ‚Üí Claude Sonnet 4',
    cost: '3.0  / 15.0',
    speed: '‚ö°‚ö°‚ö°',
    capacity: '57',
  },
  {
    emoji: 'üîµ',
    name: 'Fireworks ‚Üí Qwen3 Coder 480B',
    cost: '0.5  / 1.8',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '45',
  },
  {
    emoji: 'üîµ',
    name: 'Groq ‚Üí GPT-OSS 120B',
    cost: '0.15 / 0.75',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '58',
  },
  {
    emoji: 'üîµ',
    name: 'Azure OpenAI ‚Üí GPT‚Äë5 Racioc√≠nio Alto',
    cost: '1.25  / 10.0',
    speed: '‚ö°‚ö°',
    capacity: '67',
  },
  { emoji: 'üîµ', name: 'XAI ‚Üí Grok 4', cost: '3.0  / 15.0', speed: '‚ö°‚ö°', capacity: '65' },
  {
    emoji: 'üîµ',
    name: 'Google ‚Üí Gemini 2.5 Pro',
    cost: '2.0  / 12.5',
    speed: '‚ö°‚ö°‚ö°',
    capacity: '60',
  },
];

/* 4Ô∏è‚É£ M√°xima Complexidade üß† */
const models_maximum_complexity = [
  {
    emoji: 'üîµ',
    name: 'Azure OpenAI ‚Üí GPT‚Äë5 Racioc√≠nio Alto',
    cost: '1.25  / 10.0',
    speed: '‚ö°‚ö°',
    capacity: '67',
  },
  { emoji: 'üîµ', name: 'XAI ‚Üí Grok 4', cost: '3.0  / 15.0', speed: '‚ö°‚ö°', capacity: '65' },
  {
    emoji: 'üîµ',
    name: 'Google ‚Üí Gemini 2.5 Pro',
    cost: '2.0  / 12.5',
    speed: '‚ö°‚ö°‚ö°',
    capacity: '60',
  },
  {
    emoji: 'üî¥',
    name: 'Fireworks ‚Üí DeepSeek R1',
    cost: '3.0  / 8.0',
    speed: '‚ö°‚ö°‚ö°',
    capacity: '52',
  },
];

/* 5Ô∏è‚É£ Ultra‚ÄëVelocidade ‚ö° */
const models_ultra_velocity = [
  {
    emoji: 'üü¢',
    name: 'Groq ‚Üí GPT-OSS 20B',
    cost: '0.10 / 0.50',
    speed: '‚ö°‚ö°‚ö°‚ö°‚ö°',
    capacity: '45',
  },
  {
    emoji: 'üü¢',
    name: 'Groq ‚Üí GPT-OSS 120B',
    cost: '0.15 / 0.75',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '58',
  },
  {
    emoji: '‚ö™',
    name: 'Groq ‚Üí Llama 4 Scout',
    cost: '0.11  / 0.34',
    speed: '‚ö°‚ö°‚ö°‚ö°‚ö°',
    capacity: '28',
  },
  {
    emoji: '‚ö™',
    name: 'Groq ‚Üí Llama 4 Maverick',
    cost: '0.2  / 0.6',
    speed: '‚ö°‚ö°‚ö°‚ö°',
    capacity: '36',
  },
];

export default function PrecoTokenizacaoLimitacoesPage() {
  const { descriptions, loading } = useModelDescriptions();

  return (
    <div className="mx-auto">
      {/* ------------- Artificial Analysis - Intelligence Index Chart ----------------- */}
      <section className="mt-12" id="custo-token">
        <h2 className="mb-4 text-2xl font-semibold text-white">Gr√°fico de N√≠vel de Intelig√™ncia</h2>
        <p className="leading-relaxed text-gray-200">
          O gr√°fico abaixo mostra o n√≠vel de intelig√™ncia de cada modelo de IA, com base em sua
          capacidade de resolver problemas complexos e gerar respostas precisas. Ele √© uma m√©dia de
          todos os testes mais famosos de Intelig√™ncia Artificial.
        </p>
        <div className="mt-4">
          <img src="/assets/artificial-analysis-chart.png" alt="Gr√°fico de N√≠vel de Intelig√™ncia" />
        </div>
      </section>
      {/* ------------- T√≠tulo e Introdu√ß√£o ------------- */}
      <section className="mt-12" id="custo-token">
        <h2 className="mb-4 text-2xl font-semibold text-white">Custos por Token</h2>
        <p className="leading-relaxed text-gray-200">
          Cada modelo de IA possui um pre√ßo calculado por{' '}
          <span className="font-semibold text-green-300">tokens</span>, tanto na entrada (prompt)
          quanto na sa√≠da (resposta). Entender esses valores √© essencial para manter o or√ßamento sob
          controle.
        </p>
      </section>

      {/* ------------- Como os Tokens Impactam ------------ */}
      <section className="mt-12" id="impacto-custo">
        <h2 className="mb-4 text-2xl font-semibold text-white">Como os Tokens Impactam no Custo</h2>
        <p className="mb-4 leading-relaxed text-gray-200">
          O valor total de uma chamada API √© a soma dos tokens de entrada e sa√≠da multiplicados pelo
          pre√ßo unit√°rio de cada modelo. Prompts longos e respostas detalhadas consomem mais tokens,
          aumentando o custo.
        </p>
        <CostExample />
      </section>

      {/* ----------------- Tabela de Pre√ßos ----------------- */}
      <section className="mt-12" id="tabela-precos">
        <h2 className="mb-4 text-2xl font-semibold text-white">
          Tabela de Pre√ßos por Modelo (Em d√≥lar $ por 1 Milh√£o de tokens)
        </h2>
        <p className="mb-4 leading-relaxed text-gray-200">
          Total de modelos:{' '}
          <span className="font-semibold text-green-300">{Object.keys(descriptions).length}</span>
        </p>
        <PriceTable />
      </section>

      {/* -------------- Recomenda√ß√µes por Perfil -------------- */}
      <section className="mt-12" id="perfis-uso">
        <h2 className="mb-4 text-2xl font-semibold text-white">Recomenda√ß√µes por Perfil de Uso</h2>

        {/* 1Ô∏è‚É£ Tarefas do dia‚Äëa‚Äëdia */}
        <SectionRecommendations
          title="Tarefas Comuns do Dia a Dia"
          items={models_task_day_to_day_items}
          models={models_task_day_to_day}
        />

        {/* 2Ô∏è‚É£ Pesquisa na Web */}
        <SectionRecommendations
          title="Pesquisa na Web"
          items={models_web_search_items}
          models={models_web_search}
        />

        {/* 3Ô∏è‚É£ C√≥digo & Engenharia de Software */}
        <SectionRecommendations
          title="C√≥digo & Engenharia de Software"
          items={models_code_and_software_engineering_items}
          models={models_code_and_software_engineering}
        />

        {/* 4Ô∏è‚É£ M√°xima Complexidade */}
        <SectionRecommendations
          title="M√°xima Complexidade"
          items={models_maximum_complexity_items}
          models={models_maximum_complexity}
        />

        {/* 5Ô∏è‚É£ Ultra‚ÄëVelocidade */}
        <SectionRecommendations
          title="Ultra-Velocidade"
          items={models_ultra_velocity_items}
          models={models_ultra_velocity}
        />

        {/* Dicas Extras de Economia */}
        <div className="mt-12 text-gray-200">
          <p className="mb-2 font-semibold">üí° Dicas Extras de Economia</p>
          <ul className="pl-6 space-y-1 list-disc">
            <li>Prompt curto = menos tokens (üíµ)</li>
            <li>Abrir novo chat a cada 2‚Äë3 intera√ß√µes para evitar hist√≥rico caro</li>
            <li>Agrupar perguntas em lotes ("batching")</li>
            <li>
              Combinar modelos: use GPT‚ÄëOSS 20B/120B para rascunho e refina com Claude Sonnet 4 ‚Äì
              custo m√≠nimo com alta qualidade üöÄ
            </li>
          </ul>
        </div>
      </section>
    </div>
  );
}
